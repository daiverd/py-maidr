[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome",
    "section": "",
    "text": "maidr: Data Insight for All\nAre you eager to uncover new insights from data science but frustrated by visual-only data representations? Do you want to make your data visualizations accessible to everyone, including those who are blind or low-vision? If so, maidr is for you!\nmaidr (pronounced as ‚Äòmader‚Äô) is an accessible framework for multimodal data representation. With maidr, blind and sighted users can easily augment data visualizations into touchable (Braille), readable (text), audible (sonification), and conversational (AI) formats.\nThe following summarizes the key features and design principles of maidr:\nOur core philosophy is to make data science accessible to everyone, regardless of their visual dis/abilities. We believe that by making data visualizations accessible, we can empower blind and sighted users to work together on data science projects, share insights, and make data-driven decisions collaboratively."
  },
  {
    "objectID": "index.html#installation",
    "href": "index.html#installation",
    "title": "Welcome",
    "section": "Installation",
    "text": "Installation\nPython 3.x is required to use maidr. After installing Python, you can install maidr using the following commands in your terminal:\n# install the latest release from PyPI\npip install -U maidr\n# or install the development version from GitHub\npip install -U git+https://github.com/xability/py-maidr.git"
  },
  {
    "objectID": "index.html#getting-started",
    "href": "index.html#getting-started",
    "title": "Welcome",
    "section": "Getting Started",
    "text": "Getting Started\nMaking accessible data representation with maidr is easy and straightforward. If you already have data visualization code using matplotlib or seaborn, you can make your plots accessible with maidr in just a few lines of code.\nSimply import the maidr package and use the maidr.show() function to display your plots. maidr will automatically generate accessible versions of your plots in your default browser. You can then interact with the accessible versions using keyboard shortcuts (refer to Table¬†1).\nCheck more examples in the galleries.\n\nSample Bar Plot\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Just import maidr package \nimport maidr \n\n\n# Load the penguins dataset\npenguins = sns.load_dataset(\"penguins\")\n\n# Create a bar plot showing the average body mass of penguins by species\nplt.figure(figsize=(6, 6))\n\n# Assign the plot to a variable \nbar_plot = sns.barplot( \n    x=\"species\", y=\"body_mass_g\", data=penguins, errorbar=\"sd\", palette=\"Blues_d\"\n)\nplt.title(\"Average Body Mass of Penguins by Species\")\nplt.xlabel(\"Species\")\nplt.ylabel(\"Body Mass (g)\")\n\n# plt.show()\n\n# Use maidr.show() to display your plot \nmaidr.show(bar_plot)"
  },
  {
    "objectID": "index.html#keyboard-shortcuts",
    "href": "index.html#keyboard-shortcuts",
    "title": "Welcome",
    "section": "Keyboard Shortcuts",
    "text": "Keyboard Shortcuts\n\n\n\nTable¬†1: Keyboard Shortcuts\n\n\n\n\n\n\n\n\n\n\nFunction\nWindows and Linux Key\nMac Key\n\n\n\n\nToggle Braille Mode\nb\nb\n\n\nToggle Text Mode\nt\nt\n\n\nToggle Sonification Mode\ns\ns\n\n\nToggle Review Mode\nr\nr\n\n\nMove around plot\nArrow keys\nArrow keys\n\n\nGo to the very left right up down\nCtrl + Arrow key\nCMD + Arrow key\n\n\nSelect the first element\nCtrl + Home\nCMD + Home\n\n\nSelect the last element\nCtrl + End\nCMD + End\n\n\nRepeat current sound\nSpace\nSpace\n\n\nAuto-play outward in direction of arrow\nCtrl + Shift + Arrow key\nCMD + Shift + Arrow key\n\n\nAuto-play inward in direction of arrow\nAlt + Shift + Arrow key\nOption + Shift + Arrow key\n\n\nStop Auto-play\nCtrl\nCtrl\n\n\nAuto-play speed up\nPeriod (.)\nPeriod (.)\n\n\nAuto-play speed down\nComma (,)\nComma (,)\n\n\nAuto-play speed reset\nSlash (/)\nSlash (/)\n\n\nCheck label for the title of current plot\nl t\nl t\n\n\nCheck label for the x axis of current plot\nl x\nl x\n\n\nCheck label for the y axis of current plot\nl y\nl y\n\n\nCheck label for the fill (z) axis of current plot\nl f\nl f\n\n\nCheck label for the subtitle of current plot\nl s\nl s\n\n\nCheck label for the caption of current plot\nl c\nl c\n\n\nToggle AI Chat View\nCtrl + Shift + /\nOption + Shift + /\n\n\nCopy last chat message in AI Chat View\nAlt + Shift + C\nOption + Shift + C\n\n\nCopy full chat history in AI Chat View\nAlt + Shift + A\nOption + Shift + A\n\n\n\n\n\n\nIf you encounter a bug, have usage questions, or want to share ideas to make this package better, please feel free to file an issue."
  },
  {
    "objectID": "index.html#code-of-conduct",
    "href": "index.html#code-of-conduct",
    "title": "Welcome",
    "section": "Code of Conduct",
    "text": "Code of Conduct\nPlease note that the maidr project is released with a contributor code of conduct.By participating in this project you agree to abide by its terms."
  },
  {
    "objectID": "index.html#license",
    "href": "index.html#license",
    "title": "Welcome",
    "section": "üìÑ License",
    "text": "üìÑ License\nmaidr is licensed under the GPL3 license.\n¬© (x)Ability Design Lab."
  },
  {
    "objectID": "index.html#governance",
    "href": "index.html#governance",
    "title": "Welcome",
    "section": "üèõÔ∏è Governance",
    "text": "üèõÔ∏è Governance\nThis project is primarily maintained by JooYoung Seo and Saairam Venkatesh. Other authors may occasionally assist with some of these duties."
  },
  {
    "objectID": "api/Maidr.save_html.html",
    "href": "api/Maidr.save_html.html",
    "title": "Maidr.save_html",
    "section": "",
    "text": "Maidr.save_html(file, *, lib_dir='lib', include_version=True)\nSave the HTML representation of the figure with MAIDR to a file.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nfile\nstr\nThe file to save to.\nrequired\n\n\nlib_dir\nstr\nThe directory to save the dependencies to (relative to the file‚Äôs directory).\n\"lib\"\n\n\ninclude_version\nbool\nWhether to include the version number in the dependency folder name.\nTrue"
  },
  {
    "objectID": "api/Maidr.save_html.html#parameters",
    "href": "api/Maidr.save_html.html#parameters",
    "title": "Maidr.save_html",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nfile\nstr\nThe file to save to.\nrequired\n\n\nlib_dir\nstr\nThe directory to save the dependencies to (relative to the file‚Äôs directory).\n\"lib\"\n\n\ninclude_version\nbool\nWhether to include the version number in the dependency folder name.\nTrue"
  },
  {
    "objectID": "examples.html",
    "href": "examples.html",
    "title": "Example Gallery",
    "section": "",
    "text": "Making accessible data representation with maidr is easy and straightforward. If you already have data visualization code using matplotlib or seaborn, you can make your plots accessible with maidr in just a few lines of code.\nSimply import the maidr package and use the maidr.show() function to display your plots. maidr will automatically generate accessible versions of your plots in your default browser. You can then interact with the accessible versions using keyboard shortcuts (refer to Table¬†1).\n\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Just import maidr package \nimport maidr  \n\n\n# Load the penguins dataset\npenguins = sns.load_dataset(\"penguins\")\n\n# Create a bar plot showing the average body mass of penguins by species\nplt.figure(figsize=(6, 6))\n\n# Assign the plot to a variable \nbar_plot = sns.barplot(  \n    x=\"species\", y=\"body_mass_g\", data=penguins, errorbar=\"sd\", palette=\"Blues_d\"\n)\nplt.title(\"Average Body Mass of Penguins by Species\")\nplt.xlabel(\"Species\")\nplt.ylabel(\"Body Mass (g)\")\n\n# plt.show()\n\n# Use maidr.show() to display your plot \nmaidr.show(bar_plot)  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport maidr \n\n\n# Load the Iris dataset\niris = sns.load_dataset(\"iris\")\n\n# Select the petal lengths\npetal_lengths = iris[\"petal_length\"]\n\n# Plot a histogram of the petal lengths\nplt.figure(figsize=(6, 6))\n\nhist_plot = sns.histplot(petal_lengths, kde=True, color=\"blue\", binwidth=0.5) \n\nplt.title(\"Petal Lengths in Iris Dataset\")\nplt.xlabel(\"Petal Length (cm)\")\nplt.ylabel(\"Frequency\")\n\n# plt.show()\nmaidr.show(hist_plot) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport maidr \n\n\n# Load the 'tips' dataset from seaborn\ntips = sns.load_dataset(\"tips\") \n\n# Choose a specific subset of the dataset (e.g., data for 'Thursday')\nsubset_data = tips[tips[\"day\"] == \"Thur\"]\n\n# Create a line plot\nplt.figure(figsize=(6, 6))\nline_plot = sns.lineplot( \n    data=subset_data,\n    x=\"total_bill\",\n    y=\"tip\",\n    markers=True,\n    style=\"day\",\n    legend=False,\n)\nplt.title(\"Tips vs Total Bill (Thursday)\")\nplt.xlabel(\"Total Bill\")\nplt.ylabel(\"Tip\")\n\n# plt.show()\nmaidr.show(line_plot) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport maidr \n\n# Load an example dataset from seaborn\nglue = sns.load_dataset(\"glue\").pivot(index=\"Model\", columns=\"Task\", values=\"Score\")\n\n# Plot a heatmap\nplt.figure(figsize=(8, 8))\nheatmap = sns.heatmap(glue, annot=True, fill_label=\"Score\") \nplt.title(\"Model Scores by Task\")\n\n# Show the plot\n# plt.show()\nmaidr.show(heatmap) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport maidr \n\n# Create a scatter plot\nscatter_plot = sns.scatterplot( \n    data=iris, x=\"sepal_length\", y=\"sepal_width\", hue=\"species\"\n)\n\n# Adding title and labels (optional)\nplt.title(\"Iris Sepal Length vs Sepal Width\")\nplt.xlabel(\"Sepal Length\")\nplt.ylabel(\"Sepal Width\")\n\n# Show the plot\n# plt.show()\nmaidr.show(scatter_plot)"
  },
  {
    "objectID": "examples.html#sec-examples",
    "href": "examples.html#sec-examples",
    "title": "Example Gallery",
    "section": "",
    "text": "Making accessible data representation with maidr is easy and straightforward. If you already have data visualization code using matplotlib or seaborn, you can make your plots accessible with maidr in just a few lines of code.\nSimply import the maidr package and use the maidr.show() function to display your plots. maidr will automatically generate accessible versions of your plots in your default browser. You can then interact with the accessible versions using keyboard shortcuts (refer to Table¬†1).\n\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Just import maidr package \nimport maidr  \n\n\n# Load the penguins dataset\npenguins = sns.load_dataset(\"penguins\")\n\n# Create a bar plot showing the average body mass of penguins by species\nplt.figure(figsize=(6, 6))\n\n# Assign the plot to a variable \nbar_plot = sns.barplot(  \n    x=\"species\", y=\"body_mass_g\", data=penguins, errorbar=\"sd\", palette=\"Blues_d\"\n)\nplt.title(\"Average Body Mass of Penguins by Species\")\nplt.xlabel(\"Species\")\nplt.ylabel(\"Body Mass (g)\")\n\n# plt.show()\n\n# Use maidr.show() to display your plot \nmaidr.show(bar_plot)  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport maidr \n\n\n# Load the Iris dataset\niris = sns.load_dataset(\"iris\")\n\n# Select the petal lengths\npetal_lengths = iris[\"petal_length\"]\n\n# Plot a histogram of the petal lengths\nplt.figure(figsize=(6, 6))\n\nhist_plot = sns.histplot(petal_lengths, kde=True, color=\"blue\", binwidth=0.5) \n\nplt.title(\"Petal Lengths in Iris Dataset\")\nplt.xlabel(\"Petal Length (cm)\")\nplt.ylabel(\"Frequency\")\n\n# plt.show()\nmaidr.show(hist_plot) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport maidr \n\n\n# Load the 'tips' dataset from seaborn\ntips = sns.load_dataset(\"tips\") \n\n# Choose a specific subset of the dataset (e.g., data for 'Thursday')\nsubset_data = tips[tips[\"day\"] == \"Thur\"]\n\n# Create a line plot\nplt.figure(figsize=(6, 6))\nline_plot = sns.lineplot( \n    data=subset_data,\n    x=\"total_bill\",\n    y=\"tip\",\n    markers=True,\n    style=\"day\",\n    legend=False,\n)\nplt.title(\"Tips vs Total Bill (Thursday)\")\nplt.xlabel(\"Total Bill\")\nplt.ylabel(\"Tip\")\n\n# plt.show()\nmaidr.show(line_plot) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport maidr \n\n# Load an example dataset from seaborn\nglue = sns.load_dataset(\"glue\").pivot(index=\"Model\", columns=\"Task\", values=\"Score\")\n\n# Plot a heatmap\nplt.figure(figsize=(8, 8))\nheatmap = sns.heatmap(glue, annot=True, fill_label=\"Score\") \nplt.title(\"Model Scores by Task\")\n\n# Show the plot\n# plt.show()\nmaidr.show(heatmap) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport maidr \n\n# Create a scatter plot\nscatter_plot = sns.scatterplot( \n    data=iris, x=\"sepal_length\", y=\"sepal_width\", hue=\"species\"\n)\n\n# Adding title and labels (optional)\nplt.title(\"Iris Sepal Length vs Sepal Width\")\nplt.xlabel(\"Sepal Length\")\nplt.ylabel(\"Sepal Width\")\n\n# Show the plot\n# plt.show()\nmaidr.show(scatter_plot)"
  },
  {
    "objectID": "examples.html#reactive-dashboard",
    "href": "examples.html#reactive-dashboard",
    "title": "Example Gallery",
    "section": "Reactive Dashboard",
    "text": "Reactive Dashboard\n\nShiny\nCheck out the following Shiny dashboard with maidr and its source code is available on GitHub:\n\n\n\nStreamlit\nCheck out this Streamlit dashboard with maidr, and its source code is available on GitHub."
  },
  {
    "objectID": "examples.html#interactive-computing-jupyter-notebooks-jupyter-labs-google-colab",
    "href": "examples.html#interactive-computing-jupyter-notebooks-jupyter-labs-google-colab",
    "title": "Example Gallery",
    "section": "Interactive Computing (Jupyter Notebooks, Jupyter Labs, Google Colab)",
    "text": "Interactive Computing (Jupyter Notebooks, Jupyter Labs, Google Colab)\nCheck out this interactive notebook in Google Colab."
  },
  {
    "objectID": "examples.html#keyboard-shortcuts",
    "href": "examples.html#keyboard-shortcuts",
    "title": "Example Gallery",
    "section": "Keyboard Shortcuts",
    "text": "Keyboard Shortcuts\n\n\n\nTable¬†1: Keyboard Shortcuts\n\n\n\n\n\n\n\n\n\n\nFunction\nWindows and Linux Key\nMac Key\n\n\n\n\nToggle Braille Mode\nb\nb\n\n\nToggle Text Mode\nt\nt\n\n\nToggle Sonification Mode\ns\ns\n\n\nToggle Review Mode\nr\nr\n\n\nMove around plot\nArrow keys\nArrow keys\n\n\nGo to the very left right up down\nCtrl + Arrow key\nCMD + Arrow key\n\n\nSelect the first element\nCtrl + Home\nCMD + Home\n\n\nSelect the last element\nCtrl + End\nCMD + End\n\n\nRepeat current sound\nSpace\nSpace\n\n\nAuto-play outward in direction of arrow\nCtrl + Shift + Arrow key\nCMD + Shift + Arrow key\n\n\nAuto-play inward in direction of arrow\nAlt + Shift + Arrow key\nOption + Shift + Arrow key\n\n\nStop Auto-play\nCtrl\nCtrl\n\n\nAuto-play speed up\nPeriod (.)\nPeriod (.)\n\n\nAuto-play speed down\nComma (,)\nComma (,)\n\n\nAuto-play speed reset\nSlash (/)\nSlash (/)\n\n\nCheck label for the title of current plot\nl t\nl t\n\n\nCheck label for the x axis of current plot\nl x\nl x\n\n\nCheck label for the y axis of current plot\nl y\nl y\n\n\nCheck label for the fill (z) axis of current plot\nl f\nl f\n\n\nCheck label for the subtitle of current plot\nl s\nl s\n\n\nCheck label for the caption of current plot\nl c\nl c\n\n\nToggle AI Chat View\nCtrl + Shift + /\nOption + Shift + /\n\n\nCopy last chat message in AI Chat View\nAlt + Shift + C\nOption + Shift + C\n\n\nCopy full chat history in AI Chat View\nAlt + Shift + A\nOption + Shift + A"
  },
  {
    "objectID": "examples.html#demo-video",
    "href": "examples.html#demo-video",
    "title": "Example Gallery",
    "section": "Demo Video",
    "text": "Demo Video\n\nIf you encounter a bug, have usage questions, or want to share ideas to make this package better, please feel free to file an issue."
  },
  {
    "objectID": "examples.html#code-of-conduct",
    "href": "examples.html#code-of-conduct",
    "title": "Example Gallery",
    "section": "Code of Conduct",
    "text": "Code of Conduct\nPlease note that the maidr project is released with a contributor code of conduct.By participating in this project you agree to abide by its terms."
  },
  {
    "objectID": "examples.html#license",
    "href": "examples.html#license",
    "title": "Example Gallery",
    "section": "üìÑ License",
    "text": "üìÑ License\nmaidr is licensed under the GPL3 license.\n¬© (x)Ability Design Lab."
  },
  {
    "objectID": "examples.html#governance",
    "href": "examples.html#governance",
    "title": "Example Gallery",
    "section": "üèõÔ∏è Governance",
    "text": "üèõÔ∏è Governance\nThis project is primarily maintained by JooYoung Seo and Saairam Venkatesh. Other authors may occasionally assist with some of these duties."
  },
  {
    "objectID": "api/Maidr.show.html",
    "href": "api/Maidr.show.html",
    "title": "Maidr.show",
    "section": "",
    "text": "Maidr.show(renderer='auto')\nPreview the HTML content using the specified renderer.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nrenderer\nLiteral[‚Äòauto‚Äô, ‚Äòipython‚Äô, ‚Äòbrowser‚Äô]\nThe renderer to use for the HTML preview.\n\"auto\""
  },
  {
    "objectID": "api/Maidr.show.html#parameters",
    "href": "api/Maidr.show.html#parameters",
    "title": "Maidr.show",
    "section": "",
    "text": "Name\nType\nDescription\nDefault\n\n\n\n\nrenderer\nLiteral[‚Äòauto‚Äô, ‚Äòipython‚Äô, ‚Äòbrowser‚Äô]\nThe renderer to use for the HTML preview.\n\"auto\""
  },
  {
    "objectID": "api/index.html",
    "href": "api/index.html",
    "title": "API Reference",
    "section": "",
    "text": "Plots genereated by Matplotlib or Seaborn can be displayed in MAIDR format in default browser. Input plot object as an argument in maidr.show().\n\n\n\nMaidr.show\nPreview the HTML content using the specified renderer.\n\n\n\n\n\n\nSave a plot as an HTML file with maidr.save_html().\n\n\n\nMaidr.save_html\nSave the HTML representation of the figure with MAIDR to a file."
  },
  {
    "objectID": "api/index.html#displaying-an-accessible-and-interactive-plot-with-multimodal-formats",
    "href": "api/index.html#displaying-an-accessible-and-interactive-plot-with-multimodal-formats",
    "title": "API Reference",
    "section": "",
    "text": "Plots genereated by Matplotlib or Seaborn can be displayed in MAIDR format in default browser. Input plot object as an argument in maidr.show().\n\n\n\nMaidr.show\nPreview the HTML content using the specified renderer."
  },
  {
    "objectID": "api/index.html#saving-a-maidr-plot-as-an-html-file",
    "href": "api/index.html#saving-a-maidr-plot-as-an-html-file",
    "title": "API Reference",
    "section": "",
    "text": "Save a plot as an HTML file with maidr.save_html().\n\n\n\nMaidr.save_html\nSave the HTML representation of the figure with MAIDR to a file."
  }
]